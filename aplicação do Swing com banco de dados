/**
 *
 * @author octopus
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.MaskFormatter;
 
//classe SwingList extendida de JFrame, implementando ActionListener
public class SwingList extends JFrame implements
 ActionListener{
 
  //Variáveis
  ArrayList <Estudante> estudantes = new ArrayList<>();
  private JLabel lblEst,lblNome,lblSex,lblCPF;
  private JTextField texNome;
  private JFormattedTextField texCPF;
  private ButtonGroup gruSex;
  private JRadioButton radMasc, radFem;
  private JButton btnGrav;
  private JButton btnNovo;
  private JButton btnAnterior;
  private JButton btnProximo;
  private int posicaoLista;
  private Connection conecta;
  //Iniciando o SwingList
  public SwingList(){
    setLayout(null);
 
    //Label Estudante
    lblEst = new JLabel("Estudante: ");
    lblEst.setForeground(Color.BLUE);
    lblEst.setBounds(120,5,100,20);
    add(lblEst);
 
    //Label Nome
    lblNome = new JLabel("Nome: ");
    lblNome.setBounds(10,35,100,20);
    add(lblNome);
 
    //Text Nome
    texNome = new JTextField("");
    texNome.setBounds(10,65,300,20);
    add(texNome);
 
    //Label Sexo
    lblSex = new JLabel("Sexo: ");
    lblSex.setBounds(10,95,100,20);
    add(lblSex);
 
    //Radio Masculino
    radMasc = new JRadioButton("Masculino");
    radMasc.setBounds(10,125,120,20);
    radMasc.setForeground(Color.BLUE);
    radMasc.setBackground(Color.WHITE);
    radMasc.setSelected(true);
 
    //Radio Feminino
    radFem = new JRadioButton("Feminino");
    radFem.setBounds(200,125,120,20);
    radFem.setForeground(Color.BLUE);
    radFem.setBackground(Color.WHITE);
 
    //Grupo de Botões
    gruSex = new ButtonGroup();
    gruSex.add(radMasc);
    gruSex.add(radFem);
    add(radMasc);
    add(radFem);
 
 
    //Label CPF
    lblCPF = new JLabel("CPF: ");
    lblCPF.setBounds(10,215,100,20);
    add(lblCPF);
 
    //Campo com máscara - CPF
    try {
      MaskFormatter mk= new MaskFormatter("###.###.###-##");
      mk.setPlaceholderCharacter('_');
      /*  ou, pode setar os caracteres que irá receber
        MaskFormatter mk= new MaskFormatter("***.***.***-**");
        mk.setPlaceholderCharacter('_');
        mk.setValidCharacters("ABC0123456.");
      */
      texCPF = new JFormattedTextField(mk);
      texCPF.setBounds(10,245,300,20);
      add(texCPF);
    }
    catch(Exception e){}
  
     //Botão Ok
    btnGrav = new JButton("Salvar");
    btnGrav.setBounds(190,280,120,40);
    btnGrav.setForeground(Color.RED);
    btnGrav.addActionListener(this);
    add(btnGrav);
    
    btnNovo = new JButton("Novo");
    btnNovo.setBounds(10,280,120,40);
    btnNovo.setForeground(Color.RED);
    btnNovo.addActionListener(this);
    add(btnNovo);
    
    btnAnterior = new JButton("Anterior");
    btnAnterior.setBounds(10,340,120,40);
    btnAnterior.setForeground(Color.RED);
    btnAnterior.addActionListener(this);
    add(btnAnterior);
    
    btnProximo = new JButton("Proximo");
    btnProximo.setBounds(190,340,120,40);
    btnProximo.setForeground(Color.RED);
    btnProximo.addActionListener(this);
    add(btnProximo);
    
  }
 
  //Função responsável pelos cliques
  public void actionPerformed(ActionEvent acesso){
    String  sSexo="";
    String  sNome="";
    String  sCPF="";
  //  String  sExec="";
    Boolean bChave=true;
    //se o acesso for via botão gravar-ok
    if(acesso.getSource() == btnGrav){
     //verificando os radios
      if(radFem.isSelected())
        sSexo="F";
      if(radMasc.isSelected())
        sSexo="M";
    sNome=texNome.getText();
    sCPF=texCPF.getText();  
    Estudante est = new Estudante(sNome, sSexo, sCPF);
    estudantes.add(est);
        try {
            InsereDB(sNome, sSexo, sCPF);
        } catch (SQLException ex) {
            Logger.getLogger(SwingList.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Adicionado");
        System.out.println("Tamanho da Lista: "+estudantes.size());
        System.out.println(posicaoLista);
    }

   if(acesso.getSource() == btnNovo){
        limpaDados();
        posicaoLista = estudantes.size();
        System.out.println(posicaoLista);
      }    
    if(acesso.getSource() == btnAnterior){
        if (posicaoLista == 0) System.out.println("Inicio da Lista");
        else
        {
           Estudante est1 = estudantes.get(posicaoLista-1);
           texNome.setText(est1.getNome());
           texCPF.setText(est1.getCPF());
           if(est1.getSexo().contains("M")) radMasc.setSelected(true);
           else radFem.setSelected(true);
           posicaoLista--;
            System.out.println(posicaoLista);
        }
      } 
    if(acesso.getSource() == btnProximo){
        if (posicaoLista ==0) posicaoLista=1;
        if (posicaoLista == estudantes.size()) System.out.println("Fim da Lista");
       else
        {
           Estudante est1 = estudantes.get(posicaoLista);
           texNome.setText(est1.getNome());
           texCPF.setText(est1.getCPF());
           if(est1.getSexo().contains("M")) radMasc.setSelected(true);
           else radFem.setSelected(true);
           posicaoLista++;
            System.out.println(posicaoLista);
        }
      }   
  }
 
  //Função principal que irá criar a janela
  public static void main(String arg[]) throws SQLException
  {
    SwingList ex = new SwingList();
    ex.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    ex.getContentPane().setBackground(Color.WHITE);
    //ícone na mesma pasta do código fonte
    ex.setIconImage(new ImageIcon("ico.png").getImage());
    ex.setTitle("Lista de Estudantes");
    ex.conectaBD();
    //tira o maximizar e alteração do tamanho
    ex.setResizable(false);
    ex.setSize(330,430);
    ex.setVisible(true);
    ex.setLocationRelativeTo(null);
    ex.carregaArray();
  }
   
  //função que limpa o programa e deixa ele como executado da primeira vez
  private void limpaDados(){
    texNome.setText("");
    texCPF.setText("");
    radMasc.setSelected(true);
  }
 public void conectaBD() throws SQLException{
    conecta = DriverManager.getConnection("jdbc:derby://localhost:1527/Aula_GTI;create=true", "aluno", "aluno");
 if (conecta != null) {
                System.out.println("Conectado ao Banco de Dados");
            } 
 } 
 public void carregaArray() throws SQLException
 {
      Statement stmt = conecta.createStatement();
             ResultSet r = stmt.executeQuery("SELECT nome, sexo, cpf FROM cadastro");
             while(r.next())
             {
                 String nome = r.getString("nome");
                 String sexo = r.getString("sexo");
                 String cpf = r.getString("cpf");
                 Estudante est1 = new Estudante(nome, sexo, cpf);
                 estudantes.add(est1);
             }
        posicaoLista = estudantes.size();
 }
 public void InsereDB(String nome, String sexo, String cpf) throws SQLException
 {
      String query = " insert into cadastro (nome, sexo, cpf) values (?,?,?)";
     PreparedStatement preparedStmt = conecta.prepareStatement(query);
          preparedStmt.setString(1,nome);
          preparedStmt.setString(2,sexo);
          preparedStmt.setString(3,cpf);
          preparedStmt.execute();
 }
}
